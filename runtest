# This file is part of Copernicus
# http://www.copernicus-computing.org/
#
# Copyright (C) 2011, Sander Pronk, Iman Pouya, Erik Lindahl, and others.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2 as published
# by the Free Software Foundation
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.


#!/bin/sh
if [ ! -e examples/msm/alanine-dipeptide-msm/equil0.gro ]; then
    echo "This example script must be run from within the copernicus base directory"
    exit 1
fi

if [ $# -lt 1 ]; then 
    echo "Usage:"
    echo "runtest projectname"
    exit 1
fi
projectname=$1

./cpcc start $projectname
./cpcc import msm
# make the MSM function instance
./cpcc instance msm::msm_gmx_adaptive msm
# and start the function instance
./cpcc activate

./cpcc transact
# set its values. 
# Descriptions can be obtained with cpcc info msm::msm_mgx_adaptive
./cpcc setf msm:in.grompp.top examples/msm/alanine-dipeptide-msm/topol.top
./cpcc setf msm:in.grompp.mdp examples/msm/alanine-dipeptide-msm/grompp.mdp

# starting configurations
./cpcc setf msm:in.confs[+] examples/msm/alanine-dipeptide-msm/equil0.gro
./cpcc setf msm:in.confs[+] examples/msm/alanine-dipeptide-msm/equil1.gro
./cpcc setf msm:in.confs[+] examples/msm/alanine-dipeptide-msm/equil2.gro
./cpcc setf msm:in.confs[+] examples/msm/alanine-dipeptide-msm/equil3.gro

# re-clustering frequency(ns)
./cpcc set msm:in.recluster 1.0
# number of simulations to start per macrostate
./cpcc set msm:in.num_sim 20
./cpcc set msm:in.num_microstates 100
./cpcc set msm:in.num_macrostates 10
./cpcc set msm:in.lag_time 2
# select these atoms for clusterin:
./cpcc set msm:in.grpname  Protein

# set the maximum number of generations:
./cpcc set msm:in.num_generations 5

# commit the changes
./cpcc commit

